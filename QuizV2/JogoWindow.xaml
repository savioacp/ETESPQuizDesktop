<Window x:Class="QuizV2.JogoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuizV2"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="#FFFFFFFF"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="Grupo F - Quiz" Width="1280" Height="720" KeyDown="Window_KeyDown">
    <materialDesign:DialogHost Name="dlgConfirmarFechar">
        <materialDesign:DialogHost.DialogContent >
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="Fechar" Grid.ColumnSpan="2" FontSize="16" FontWeight="SemiBold"/>
                <TextBlock Text="Deseja realmente sair deste quiz?" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10"/>
                <Button Name="btnVoltarSair" Grid.Row="2" Grid.Column="0" Style="{DynamicResource MaterialDesignFlatButton}" Foreground="#FF999999" Click="BtnVoltarSair_OnClick">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ArrowBack"/>
                        <TextBlock Text="Voltar [Esc]" Margin="3,0,0,0"/>
                    </StackPanel>
                </Button>
                <Button Name="btnConfirmarSair" Grid.Row="2" Grid.Column="1" Style="{DynamicResource MaterialDesignFlatButton}" Foreground="#FFB24242" Click="ButtonFechar_Click">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Close"/>
                        <TextBlock Text="Sim [Enter]" Margin="3,0,0,0"/>
                    </StackPanel>
                </Button>
            </Grid>
        </materialDesign:DialogHost.DialogContent>
        <materialDesign:Transitioner SelectedIndex="0" Name="Transitioner">
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect SlideInFromTop}">
                <materialDesign:TransitionerSlide.ForwardWipe>
                    <materialDesign:FadeWipe />
                </materialDesign:TransitionerSlide.ForwardWipe>
                <materialDesign:TransitionerSlide.BackwardWipe>
                    <materialDesign:FadeWipe />
                </materialDesign:TransitionerSlide.BackwardWipe>
                <materialDesign:DrawerHost Name="DrawerHost">
                    <materialDesign:DrawerHost.RightDrawerContent>
                        <ListBox Grid.Row="1" Name="lbxRanking" Margin="10,0,10,0">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:TransitioningContent OpeningEffectsOffset="{materialDesign:IndexedItemOffsetMultiplier 0:0:0.05}">
                                        <materialDesign:TransitioningContent.OpeningEffects>
                                            <materialDesign:TransitionEffect Kind="SlideInFromRight"/>
                                            <materialDesign:TransitionEffect Kind="FadeIn"/>
                                        </materialDesign:TransitioningContent.OpeningEffects>
                                        <StackPanel>
                                            <Grid Margin="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="36"/>
                                                </Grid.ColumnDefinitions>
                                                <Image Grid.Column="0" Height="24" Source="{Binding Image}" Visibility="{Binding ImageVisibility}" RenderOptions.BitmapScalingMode="Fant"/>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Index}" Visibility="{Binding IndexVisibility}" FontSize="18" HorizontalAlignment="Center"/>
                                                <TextBlock Grid.Column="1" Text="{Binding Nome}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Foreground="{Binding Foreground}"/>
                                                <TextBlock Grid.Column="2" Text="{Binding Pontos}" VerticalAlignment="Center" FontSize="16" HorizontalAlignment="Center"/>
                                            </Grid>
                                            <Separator Background="{Binding Cor}"/>
                                        </StackPanel>
                                    </materialDesign:TransitioningContent>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </materialDesign:DrawerHost.RightDrawerContent>
                    <materialDesign:DialogHost Name="DialogHostFinalizar" IsOpen="False">
                        <materialDesign:DialogHost.DialogContent>
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition Height="500"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                    
                                <TextBlock Text="Computar acertos" Grid.ColumnSpan="4" Margin="10,10,10,0" FontSize="23"/>
                                <TextBlock Text="Marque as equipes que acertaram a questão." Grid.Row="1" TextWrapping="Wrap" Margin="10,0,10,10" HorizontalAlignment="Left" MaxWidth="150"/>
                                <StackPanel Orientation="Horizontal"  Grid.Row="2" Margin="5,0,0,0">
                                    <ToggleButton Style="{DynamicResource MaterialDesignSwitchAccentToggleButton}"  Margin="5" Name="ToggleButtonRepescagem" Click="ToggleButtonRepescagem_OnClick"/>
                                    <TextBlock VerticalAlignment="Center" Text="Recuperação" FontSize="16"/>
                                </StackPanel>
                                    <ScrollViewer Grid.Row="3" MaxHeight="500" Margin="10" materialDesign:ScrollBarAssist.ButtonsVisibility="Collapsed" Style="{DynamicResource MaterialDesignScrollViewer}">
                                    <ItemsControl Name="ItemsControlFinalizar">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="10">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="36"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox IsChecked="{Binding IsRight, Mode=TwoWay}" Click="ButtonBase_OnClick"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding Nome}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Foreground="{Binding Foreground}"/>
                                                        <TextBlock Grid.Column="2" Text="{Binding Pontos}" VerticalAlignment="Center" FontSize="16" HorizontalAlignment="Center"/>
                                                    </Grid>
                                                    <Separator Background="{Binding Cor}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                                <Button Grid.Row="4" Grid.Column="0" Margin="10" Name="ButtonConfirmarFinalizar" Click="ButtonConfirmarFinalizar_OnClick">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="ArrowRight"/>
                                        <TextBlock Text="Prosseguir" Margin="10,0,0,0"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </materialDesign:DialogHost.DialogContent>
                            <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22*" />
                                <ColumnDefinition Width="31*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="label" Grid.Column="0" TextAlignment="Center" TextWrapping="Wrap" Height="108" FontSize="28" Margin="30,61" VerticalAlignment="Center" Grid.ColumnSpan="2">
                                Teste de pergunta bem grande que da pra ver se funcionando a quebra de linha quebra de linha quebra de linha quebra de linha quebra de linhaquebra de linha
                            </TextBlock>

                            <Image Name="img" Source="exemplo-de-grafico-de-linhas.jpg" RenderOptions.BitmapScalingMode="Fant" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="2" Grid.Row="1" Margin="20,20,20,0" VerticalAlignment="Top" Height="344"/>
                            <StackPanel Name="stpRespostas" Grid.Column="1" Margin="20" Grid.Row="1">
                                <TextBlock Name="txtRespostaA" FontSize="18" Margin="5" TextWrapping="Wrap">A) Resposta A</TextBlock>
                                <TextBlock Name="txtRespostaB" FontSize="18" Margin="5" TextWrapping="Wrap">B) Resposta B</TextBlock>
                                <TextBlock Name="txtRespostaC" FontSize="18" Margin="5" TextWrapping="Wrap">C) Resposta C</TextBlock>
                                <TextBlock Name="txtRespostaD" FontSize="18" Margin="5" TextWrapping="Wrap">D) Resposta D</TextBlock>
                            </StackPanel>
                            <local:TimerControl Grid.Row="2" Grid.Column="1" Height="160" VerticalAlignment="Top" x:Name="TimerControl"/>
                        </Grid>
                    </materialDesign:DialogHost>
                </materialDesign:DrawerHost>
            </materialDesign:TransitionerSlide>
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect SlideInFromBottom}">
                <materialDesign:TransitionerSlide.ForwardWipe>
                    <materialDesign:FadeWipe />
                </materialDesign:TransitionerSlide.ForwardWipe>
                <materialDesign:TransitionerSlide.BackwardWipe>
                    <materialDesign:FadeWipe />
                </materialDesign:TransitionerSlide.BackwardWipe>
                <Grid  HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Image x:Name="podio2" Margin="493,0,492,-461" Source="Images/podio2.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Height="470" VerticalAlignment="Bottom">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Image x:Name="podio3" HorizontalAlignment="Left" Height="266" Margin="287,0,0,-233" Source="Images/podio3.png" Stretch="Fill" VerticalAlignment="Bottom" Width="227" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Image x:Name="podio" HorizontalAlignment="Right" Height="288" Margin="0,0,284,-287" Source="Images/podio.png" Stretch="Fill" VerticalAlignment="Bottom" Width="230" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Image x:Name="regua" HorizontalAlignment="Left" Margin="325,292,0,215" Source="Images/gifregua.gif" Width="189" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Image x:Name="lapis" HorizontalAlignment="Right" Margin="0,241,320,281" Source="Images/giflapis.gif" Width="155" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Image x:Name="globo" Height="222" Margin="493,85,525,0" Source="Images/gifglobo.gif" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" FontStyle="Oblique" Height="123" Margin="131,0,0,83" TextWrapping="Wrap" FontFamily="roboto" FontSize="25" VerticalAlignment="Bottom" Width="150" RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </TextBlock.RenderTransform><Run Text="TERCEIRO LUGAR:"/><LineBreak/><Run Text="EQUIPE X"/></TextBlock>
                    <TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Right" FontStyle="Oblique" Height="123" Margin="0,97,364,0" TextWrapping="Wrap" FontFamily="roboto" FontSize="25" VerticalAlignment="Top" Width="150" RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </TextBlock.RenderTransform><Run Text="PRIMEIRO "/><Run Text="LUGAR:"/><LineBreak/><Run Text="EQUIPE X"/></TextBlock>
                    <TextBlock x:Name="textBlock_Copy1" HorizontalAlignment="Right" FontStyle="Oblique" Height="123" Margin="0,0,91,180.5" TextWrapping="Wrap" FontFamily="roboto" FontSize="25" VerticalAlignment="Bottom" Width="150"><Run Text="SEGUNDO"/><LineBreak/><Run/><Run Text="LUGAR:"/><LineBreak/><Run Text="EQUIPE X"/></TextBlock>

                </Grid>
            </materialDesign:TransitionerSlide>
        </materialDesign:Transitioner>
    </materialDesign:DialogHost>
    

    <Window.Resources>
        <Storyboard x:Key="animation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="podio2">
                <EasingDoubleKeyFrame KeyTime="0" Value="-198"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-297"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-360"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="-417"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="podio3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-72"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-144"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-189"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="-216"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="podio">
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-87"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-147"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-207"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="-240"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="regua">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="regua">
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="-3"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="regua">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="lapis">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="36"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="lapis">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="podio2">
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="podio">
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="lapis">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="-6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="globo">
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="globo">
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock">
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_Copy1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_Copy">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock_Copy">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
</Window>
